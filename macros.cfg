




[gcode_macro TEST_Z_ENDSTOP]
description: Test Z endtop
gcode:
  g28 Z
  PROBE_Z_ACCURACY SAMPLES=6 SAMPLE_RETRACT_DIST=8


[gcode_macro TEST_OFFSET]
description: Test offset of probe
gcode:
    G28 Z
    G1 X175 Y175
    G90
    G0 Z5

[gcode_macro UNSAFE_MOVE_Z]
description: Move the Z without homing
gcode:
    {% set MOVE_MM = params.MM|default(-30)|float * (-1) %}
    G90
    SET_KINEMATIC_POSITION Z={MOVE_MM}
    G0 Z0 F600

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[gcode_macro PRIME_LINE]
gcode:
    G92 E3
    M117 Linha de purga
    G92 E0
    G1 Z2.0 F3000
    G1 X1 Y30 Z0.4 F5000.0
    G1 X1 Y200.0 Z0.4 F1500.0 E15
    G1 X2 Y200.0 Z0.4 F5000.0
    G1 X2 Y50 Z0.4 F1500.0 E30
    G92 E0
    G1 Z5.0 F3000

[gcode_macro PRINT_START]
gcode:
    M117 PRINT_START
    #SET_FAN_SPEED FAN=underbed_22 SPEED=0.8
    G28
    Z_TILT_ADJUST
    #G28 Z
    #RUN PROBE AUTO CALIBRATION
    #auto_offset_z
    # CLEAR BED MESH 
    BED_MESH_CLEAR
    # REUN BED MESH - ADAPTIVE MESH - https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging
    BED_MESH_CALIBRATE
   
    #PURGE LINE CALL   
    SET_LED LED=led_chamber1 WHITE=1.00 SYNC=0 TRANSMIT=1
    #RESPOND MSG="PURGE LINE"
    VORON_PURGE
    SET_FAN_SPEED FAN=underbed SPEED=0.55
    SET_FAN_SPEED FAN=boardFan SPEED=1.00
    ##  center of the bed
    #G0 X175 Y175 Z10 F3600
    #--------------------------------------------------------------------

###### START PRINT MULTILAYER #####
[gcode_macro PRINT_START_MULTILAYER]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(0)|float %}
    M117 Espera temperaturas
    M140 S{BED_TEMP}
    {% if printer.heater_bed.temperature > params.BED_TEMP|float*0 %}
        M140 S{BED_TEMP}
        M109 S{EXTRUDER_TEMP}
        M190 S{BED_TEMP}
    {% else %}
        M190 S{params.BED_TEMP|float*0}
        M109 S{EXTRUDER_TEMP}
        M190 S{BED_TEMP}
    {% endif %}
    G92 E0
    #PRIME_LINE
    M117 Imprimir multi camada...

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    #{% set th = printer.toolhead %}
   # {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
   # {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
   # {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    ;G1 Z+25 F1500
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    SET_FAN_SPEED FAN=underbed SPEED=0
    SET_FAN_SPEED FAN=boardFan SPEED=0

    G90                                      ; absolute positioning
    #G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    #G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    SET_LED LED=led_chamber1 WHITE=0.00 SYNC=0 TRANSMIT=1
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    G28 X
    G28 Y

[gcode_macro PRINT_END_MULTILAYER]
gcode:
    M117 Trocar Filamento
    G1 X20 Y20 Z40 F2000
    G92 E0



[gcode_macro PAUSE] #暂停
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(10) %}      #edit to your park position
    {% set y = params.Y|default(10) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]  #继续打印 
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
      {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
      {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
      {%else %}
        {% set get_params = "" %}
      {% endif %}
    ##### end of definitions #####
      G91
      {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E{e} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
      {% endif %}   
      RESUME_BASE {get_params}


#[gcode_macro CANCEL_PRINT]
#description: Cancel the actual running print #Mlabs mod
#rename_existing: CANCEL_PRINT_BASE
#gcode:
#  M106 S0
#  TURN_OFF_HEATERS
#  CANCEL_PRINT_BASE
#  G1 Z+50
#  G28 Y


[gcode_macro UNLOAD_FILAMENT] #unload filament
gcode:
    G91
    G1 E-50 F800
    G1 E-50 F800
    G90

[gcode_macro LOAD_FILAMENT] #load filament
gcode:
    G91
    G1 E50 F800
    G1 E50 F300
    G90
